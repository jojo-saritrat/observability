version: "3.8"

services:
  # --- Observability Backend ---
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: "-config.file=/etc/loki/local-config.yaml"

  tempo:
    image: grafana/tempo:latest
    ports:
      - "4317:4317" # OTLP gRPC
      - "3200:3200" # Tempo UI
    command: >
      -target=all
      -storage.trace.backend=local
      -storage.trace.local.path=/tmp/tempo
      -auth.enabled=false
      -server.http-listen-port=3200

  mimir:
    image: grafana/mimir:latest
    ports:
      - "9009:9009"   # API
      - "8081:8080"   # HTTP UI (สำคัญสำหรับ Grafana)
    command: ["-target=all", "-auth.multitenancy-enabled=false", "-server.http-listen-port=9009"]

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - mimir
      - loki
      - tempo

  # --- Agent ---
  alloy:
    image: grafana/alloy:latest
    privileged: true
    ports:
      - "12345:12345"
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
    # pid: "host"
    command: "run --server.http.listen-addr=0.0.0.0:12345 /etc/alloy/config.alloy"

  # --- Application & Exporter ---
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  python-server:
    image: python:3.9-slim
    command: python3 -m http.server 8080
    ports:
      - "8080:8080"
    labels:
      - "app=python-server"

  curl-client:
    build:
      context: ./curl-client
    environment:
      - TARGET_URL=http://python-server:8080
    depends_on:
      - python-server
    labels:
      - "app=curl-client"
